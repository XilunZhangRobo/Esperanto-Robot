Plan:
1. First, we need to determine the size of each object. This will allow us to stack the objects from largest to smallest, ensuring the highest possible height.
2. Once we have the sizes, we will start with the largest object. We will open the gripper, move to the graspable point of the object, close the gripper to grab the object, and then move to the desired position to place the object.
3. We will repeat this process for the second largest object, placing it on top of the first object. We will need to adjust the position to account for the height of the first object.
4. Finally, we will repeat the process for the smallest object, placing it on top of the second object. Again, we will need to adjust the position to account for the combined height of the first two objects.

Python Code:

```python
import numpy as np

# Get the size of each object
cubeA_size = get_size('cubeA')
cubeB_size = get_size('cubeB')
cubeC_size = get_size('cubeC')
cubeD_size = get_size('cubeD')
bottleA_size = get_size('BottleA')
ballA_size = get_size('BallA')

# Create a dictionary to store the sizes
sizes = {'cubeA': cubeA_size, 'cubeB': cubeB_size, 'cubeC': cubeC_size, 'cubeD': cubeD_size, 'BottleA': bottleA_size, 'BallA': ballA_size}

# Sort the dictionary by size in descending order
sorted_sizes = sorted(sizes.items(), key=lambda x: x[1], reverse=True)

# Initialize the total height
total_height = 0

# Loop through the sorted sizes
for i in range(3):
    # Open the gripper
    open_gripper()

    # Get the graspable point of the object
    graspable_point = get_graspable_point(sorted_sizes[i][0])

    # Move to the graspable point
    move_to_position(graspable_point)

    # Close the gripper to grab the object
    close_gripper()

    # Calculate the new position to place the object
    new_position = graspable_point
    new_position[2] += total_height

    # Move to the new position
    move_to_position(new_position)

    # Open the gripper to release the object
    open_gripper()

    # Update the total height
    total_height += sorted_sizes[i][1]
```
This code will stack the three largest objects on top of each other, achieving the highest possible height.