
import numpy as np

# Step 1
open_gripper()

# Step 2
cubeA_graspable_point = get_graspable_point('cubeA')

# Step 3
move_to_position(cubeA_graspable_point + np.array([0, 0, get_size('cubeA')[2]]))

# Step 4
move_to_position(cubeA_graspable_point)

# Step 5
close_gripper()

# Step 6
move_to_position(cubeA_graspable_point + np.array([0, 0, get_size('cubeA')[2]]))

# Step 7
cubeB_graspable_point = get_graspable_point('cubeB')
move_to_position(cubeB_graspable_point + np.array([0, 0, get_size('cubeB')[2] + get_size('cubeA')[2]]))

# Step 8
move_to_position(cubeB_graspable_point + np.array([0, 0, get_size('cubeB')[2]]))

# Step 9
open_gripper()

# Step 10
move_to_position(cubeB_graspable_point + np.array([0, 0, get_size('cubeB')[2] + get_size('cubeA')[2]]))

# Step 11
ballA_graspable_point = get_graspable_point('ballA')

# Step 12
move_to_position(ballA_graspable_point + np.array([0, 0, get_size('ballA')[2]]))

# Step 13
move_to_position(ballA_graspable_point)

# Step 14
close_gripper()

# Step 15
move_to_position(ballA_graspable_point + np.array([0, 0, get_size('ballA')[2]]))

# Step 16
move_to_position(cubeB_graspable_point + np.array([0, 0, get_size('cubeB')[2] + get_size('cubeA')[2] + get_size('ballA')[2]]))

# Step 17
move_to_position(cubeB_graspable_point + np.array([0, 0, get_size('cubeB')[2] + get_size('cubeA')[2]]))

# Step 18
open_gripper()
