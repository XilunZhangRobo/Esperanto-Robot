 Step 1: Identify the graspable point on cubeA and cubeB.
Step 2: Move the robotic arm to the graspable point on cubeA.
Step 3: Open the gripper.
Step 4: Move the robotic arm to the graspable point on cubeB.
Step 5: Close the gripper to stack cubeA on top of cubeB.

Here is the corresponding Python code:

```python
import numpy as np

# Assuming these functions are pre-defined in the robotic arm's library
def open_gripper():
    pass

def close_gripper():
    pass

def move_to_position(position):
    pass

def get_graspable_point(cube_name):
    # This function should return the graspable point on the cube
    pass

# Step 1: Identify the graspable point on cubeA and cubeB
cubeA_graspable_point = get_graspable_point('cubeA')
cubeB_graspable_point = get_graspable_point('cubeB')

# Step 2: Move the robotic arm to the graspable point on cubeA
move_to_position(cubeA_graspable_point)

# Step 3: Open the gripper
open_gripper()

# Step 4: Move the robotic arm to the graspable point on cubeB
move_to_position(cubeB_graspable_point)

# Step 5: Close the gripper to stack cubeA on top of cubeB
close_gripper()
```
This code assumes that the `get_graspable_point` function returns a position that the robotic arm can move to, and that the `move_to_position` function moves the arm to that position. The `open_gripper` and `close_gripper` functions control the state of the robotic arm's gripper.